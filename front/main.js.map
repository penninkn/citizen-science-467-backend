{"version":3,"sources":["./src/app/admin/admin-dashboard/admin-dashboard.component.ts","./src/app/admin/admin-dashboard/admin-dashboard.component.html","./src/app/account/edit-registration/edit-registration.component.ts","./src/app/account/edit-registration/edit-registration.component.html","./src/app/shared/back-button/back.component.ts","./src/app/shared/back-button/back.component.html","./src/app/CustomPipe/Summary.pipe.ts","./src/app/shared/single-observation/single-observation.component.html","./src/app/shared/single-observation/single-observation.component.ts","./src/app/user/user-observations/user-observations.component.html","./src/app/user/user-observations/user-observations.component.ts","./src/app/user/user.module.ts","./src/app/services/observation.service.ts","./src/environments/environment.ts","./src/app/services/projects.service.ts","./src/app/shared/observation/observation.component.ts","./src/app/shared/observation/observation.component.html","./src/app/user/make-observation/make-observation.component.ts","./src/app/user/make-observation/make-observation.component.html","./src/app/admin/project-data/project-data.component.ts","./src/app/admin/project-data/project-data.component.html","./src/app/shared/navigation/navigation.component.ts","./src/app/shared/navigation/navigation.component.html","./src/app/shared/project-observations/project-observations.component.html","./src/app/shared/project-observations/project-observations.component.ts","./src/app/admin/add-project/add-project.component.ts","./src/app/admin/add-project/add-project.component.html","./src/app/shared/projects/projects.component.html","./src/app/shared/projects/projects.component.ts","./src/app/shared/shared.module.ts","./src/app/admin/observations-list/observations-list.component.ts","./src/app/admin/observations-list/observations-list.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/user/update-observation/update-observation.component.ts","./src/app/user/update-observation/update-observation.component.html","./src/app/guards/admin.guard.ts","./src/app/guards/auth.guard.ts","./src/app/guards/dashboard.guard.ts","./src/app/account/registration/registration.component.ts","./src/app/account/registration/registration.component.html","./src/app/app.module.ts","./src/app/account/login/login.component.ts","./src/app/account/login/login.component.html","./src/app/shared/project-description/project-description.component.ts","./src/app/shared/project-description/project-description.component.html","./src/app/user/user-dashboard/user-dashboard.component.ts","./src/app/user/user-dashboard/user-dashboard.component.html","./src/app/interceptors/jwt.interceptor.ts","./src/app/account/profile/profile.component.ts","./src/app/account/profile/profile.component.html","./src/app/account/account.module.ts","./src/app/admin/admin.module.ts","./src/app/services/user.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ObservationService } from 'src/app/services/observation.service';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-admin-dashboard',\n  templateUrl: './admin-dashboard.component.html',\n  styleUrls: ['./admin-dashboard.component.scss'],\n})\nexport class AdminDashboardComponent implements OnInit {\n  user: any;\n  allObservations: any;\n\n  constructor(\n    private usersService: UserService,\n    private observationsService: ObservationService\n  ) {}\n\n  async ngOnInit() {\n    this.user = await this.usersService.getUserInfo();\n  }\n\n}\n","<h2>Welcome back, {{ user?.first_name }}!</h2>\n<table>\n  <tr>\n    <td>\n      <a routerLink=\"/projects\"\n        ><button class=\"btn-round-orange\" id=\"admin-btn\">\n          <img src=\"assets/imgs/clipboard-list-solid.svg\" /><br />\n          view all projects\n        </button></a\n      >\n    </td>\n    <td>\n      <a routerLink=\"/add-project\"\n        ><button class=\"btn-round-green\" id=\"admin-btn\">\n          <img src=\"assets/imgs/plus-square-regular.svg\" /><br />\n          add project\n        </button></a\n      >\n    </td>\n    <td>\n      <button\n        class=\"btn-round-blue\"\n        id=\"admin-btn\"\n        routerLink=\"/admin-observations\"\n      >\n        <img src=\"assets/imgs/clipboard-list-solid.svg\" /><br />\n        view data\n      </button>\n    </td>\n  </tr>\n</table>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-edit-registration',\n  templateUrl: './edit-registration.component.html',\n  styleUrls: ['./edit-registration.component.scss'],\n})\nexport class EditRegistrationComponent implements OnInit {\n  message: string;\n  user;\n\n  constructor(\n    private fb: FormBuilder,\n    private http: HttpClient,\n    private router: Router,\n    private userService: UserService\n  ) {}\n\n  async ngOnInit() {\n    this.message = '';\n    if (sessionStorage.getItem('isLoggedIn')) {\n      await this.populateFormData();\n    }\n  }\n\n  userForm = this.fb.group({\n    first_name: [''],\n    last_name: [''],\n    age: [''],\n    username: [''],\n    email: [''],\n    password: [''],\n  });\n\n  async onSubmit() {\n    let formData = {\n      first_name: this.userForm.get('first_name').value,\n      last_name: this.userForm.get('last_name').value,\n      age: this.userForm.get('age').value,\n      username: this.userForm.get('username').value,\n      email: this.userForm.get('email').value,\n    };\n\n    try {\n      const res: any = await this.http\n        .put(\n          environment.backendUrl + 'auth/register/' + this.user._id,\n          formData\n        )\n        .toPromise();\n      localStorage.setItem('username', formData.username);\n      localStorage.setItem('token', res.token.accessToken);\n\n      window.alert('Profile updated succesfully!');\n      this.router.navigateByUrl('profile');\n    } catch (err) {\n      this.message = err.error.error || err.error.message;\n    }\n  }\n\n  async populateFormData(): Promise<void> {\n    this.user = await this.userService.getUserInfo();\n  }\n}\n","<h1>Edit Profile</h1>\n<h3>{{ message }}</h3>\n<div class=\"add_form\">\n  <form [formGroup]=\"userForm\" (ngSubmit)=\"onSubmit()\">\n    <div>\n      <label>\n        First Name:<br />\n        <input\n          type=\"text\"\n          formControlName=\"first_name\"\n          [(ngModel)]=\"this.user.first_name\"\n          value=\"{{ user?.first_name }}\"\n        />\n      </label>\n    </div>\n    <div>\n      <label>\n        Last Name:<br />\n        <input\n          type=\"text\"\n          formControlName=\"last_name\"\n          [(ngModel)]=\"this.user.last_name\"\n          value=\"{{ user?.last_name }}\"\n        />\n      </label>\n    </div>\n    <div>\n      <label>\n        age:<br />\n        <input\n          type=\"number\"\n          formControlName=\"age\"\n          [(ngModel)]=\"this.user.age\"\n          value=\"{{ user?.age }}\"\n        />\n      </label>\n    </div>\n    <div>\n      <label>\n        username:<br />\n        <input\n          type=\"text\"\n          formControlName=\"username\"\n          [(ngModel)]=\"this.user.username\"\n          value=\"{{ user?.username }}\"\n        />\n      </label>\n    </div>\n    <div>\n      <label>\n        email:<br />\n        <input\n          type=\"text\"\n          formControlName=\"email\"\n          [(ngModel)]=\"this.user.email\"\n          value=\"{{ user?.email }}\"\n        />\n      </label>\n    </div>\n    <button class=\"btn-round-red\" type=\"submit\">Submit</button>\n  </form>\n  <br />\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ProjectsService } from 'src/app/services/projects.service';\n\n@Component({\n  selector: 'app-back-button',\n  templateUrl: './back.component.html',\n  styleUrls: ['./back.component.scss'],\n})\nexport class BackButtonComponent {\n  @Input() backUrl: string;\n  @Input() buttonText: string = 'Back';\n\n  constructor(private router: Router) {}\n\n  onClick() {\n    this.router.navigateByUrl(this.backUrl);\n  }\n}\n","<button class=\"btn-round-green\" (click)=\"onClick()\">{{ buttonText }}</button>\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: \"summary\"\n})\nexport class SummaryPipe implements PipeTransform {\n    transform(value: string, limit?: number) {\n        if (!value)\n            return null;\n        let actualLimit = (limit) ? limit : 100;\n        return value.substr(0, actualLimit) + '...';\n    }\n}","<div class=\"obs\">\n  <div class=\"obs-container\">\n    <div class=\"title\">\n      <h3>Observation Detail</h3>\n    </div>\n    <div class=\"obs-details\">\n      <div class=\"obs-info\">\n        <p><b>Project:</b> {{ observation?.project?.title }}</p>\n        <p><b>Title:</b> {{ observation?.title }}</p>\n        <p><b>Observation:</b> {{ observation?.text }}</p>\n        <p>\n          <b>Location:</b> {{ observation?.city\n          }}<span *ngIf=\"observation.state\">, </span>\n          {{ observation?.state }}\n        </p>\n        <p>\n          <b> Coordinates:</b> {{ observation?.longitude }},\n          {{ observation?.latitude }}\n        </p>\n        <p><b>Date:</b> {{ observation?.date | date: \"MM-dd-yyyy\":\"UTC\" }}</p>\n      </div>\n      <div class=\"obs-actions\">\n        <h2>Actions:</h2>\n        <button class=\"btn-round-purple\" routerLink=\"/admin-observations\">\n          View Master List\n        </button>\n        <button class=\"btn-round-green\" (click)=\"onEditClick(observation._id)\">\n          Edit\n        </button>\n        <button class=\"btn-round-red\" (click)=\"onDeleteClick(observation._id)\">\n          Delete\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ObservationService } from 'src/app/services/observation.service';\n\n@Component({\n  selector: 'app-single-observation',\n  templateUrl: './single-observation.component.html',\n  styleUrls: ['./single-observation.component.scss'],\n})\nexport class SingleObservationComponent implements OnInit {\n  observation;\n\n  constructor(\n    private observationService: ObservationService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    const observationId = this.route.snapshot.paramMap.get('id');\n    this.observation = await this.observationService.getOneObservation(\n      observationId\n    );\n  }\n\n  onEditClick(observationId) {\n    this.router.navigateByUrl('update-observation/' + observationId);\n  }\n\n  async onDeleteClick(observationId) {\n    await this.observationService.deleteObservation(observationId);\n    this.router.navigateByUrl('admin-observations');\n  }\n}\n","<h2>My Logs:</h2>\n<div class=\"list_all\">\n  <div *ngFor=\"let observation of observations\">\n    <div class=\"obs-container\">\n      <div class=\"title\">\n        <h3>{{ observation?.title }}</h3>\n      </div>\n      <div class=\"obs-details\">\n        <div class=\"obs-info\">\n          <p><b>Project:</b> {{ observation?.project?.title }}</p>\n          <p><b>Date:</b> {{ observation?.date }}</p>\n          <p><b>Observation:</b> {{ observation?.text }}</p>\n          <p>\n            <b>Location:</b> {{ observation?.city\n            }}<span *ngIf=\"observation.state\">, </span>\n            {{ observation?.state }}\n          </p>\n        </div>\n        <div class=\"obs-actions\">\n          <button class=\"btn-round-green\" id=\"obs_btn\">\n            <img\n              src=\"assets/imgs/edit-solid.svg\"\n              (click)=\"onEditClick(observation._id)\"\n            />\n          </button>\n          <button class=\"btn-round-red\" id=\"obs_btn\">\n            <img\n              src=\"assets/imgs/trash-alt-solid.svg\"\n              (click)=\"onDeleteClick(observation._id)\"\n            />\n          </button>\n        </div>\n      </div>\n    </div>\n    <br /><br />\n  </div>\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { ObservationService } from 'src/app/services/observation.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-user-observations',\n  templateUrl: './user-observations.component.html',\n  styleUrls: ['./user-observations.component.scss'],\n})\nexport class UserObservationsComponent implements OnInit {\n  observations;\n\n  constructor(\n    private http: HttpClient,\n    private observationService: ObservationService,\n    private router: Router\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    const username = localStorage.getItem('username');\n    this.observations = await this.observationService.getObservationsByUser(\n      username\n    );\n  }\n\n  onEditClick(observationId) {\n    this.router.navigateByUrl('update-observation/' + observationId);\n  }\n\n  async onDeleteClick(observationId) {\n    try {\n      await this.observationService.deleteObservation(observationId);\n      this.ngOnInit();\n    } catch (err) {\n      window.alert('Unable to delete observation.');\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UserObservationsComponent } from './user-observations/user-observations.component';\nimport { MakeObservationComponent } from './make-observation/make-observation.component';\nimport { UpdateObservationComponent } from './update-observation/update-observation.component';\nimport { UserDashboardComponent } from './user-dashboard/user-dashboard.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    UserObservationsComponent,\n    MakeObservationComponent,\n    UpdateObservationComponent,\n    UserDashboardComponent,\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n})\nexport class UserModule {}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ObservationService {\n  constructor(private http: HttpClient) { }\n\n  getProjectObservations(projectId: string): Promise<any> {\n    return this.http\n      .get(environment.backendUrl + 'observation/project/' + projectId)\n      .toPromise();\n  }\n\n  getOneObservation(observationID): Promise<any> {\n    return this.http\n      .get(environment.backendUrl + 'observation/' + observationID)\n      .toPromise();\n  }\n\n  getAllObservations(): Promise<any> {\n    return this.http\n      .get(environment.backendUrl + 'observation/observations')\n      .toPromise();\n  }\n\n  getObservationsByUserAndProject(\n    projectId: string,\n    username: string\n  ): Promise<any> {\n    const request = {\n      p_id: projectId,\n      user: username,\n    };\n    return this.http\n      .post(environment.backendUrl + 'observation/project/user', request)\n      .toPromise();\n  }\n\n  getObservationsByUser(\n    username: string\n  ): Promise<any> {\n    const request = {\n      user: username\n    };\n    return this.http\n      .post(environment.backendUrl + 'observation/user', request)\n      .toPromise();\n  }\n\n  //is this being used anywhere? Don't see it in backend -EA\n  getUserObservations(projectId: string): Promise<any> {\n    return this.http\n      .get(environment.backendUrl + 'observation/user/' + projectId)\n      .toPromise();\n  }\n\n  deleteObservation(observationID: string): Promise<any> {\n    return this.http\n      .delete(environment.backendUrl + 'observation/' + observationID)\n      .toPromise();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  backendUrl: '/',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProjectsService {\n  constructor(private http: HttpClient) { }\n\n  getAllProjects(): Promise<any> {\n    return this.http\n      .get(environment.backendUrl + 'project/projects')\n      .toPromise();\n  }\n\n  getOneProject(projectID): Promise<any> {\n    return this.http\n      .get(environment.backendUrl + 'project/' + projectID)\n      .toPromise();\n  }\n  getProjectsByType(type): Promise<any> {\n    return this.http\n      .get(environment.backendUrl + 'project/type?type=' + type)\n      .toPromise();\n  }\n}\n\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ProjectsService } from 'src/app/services/projects.service';\n\n@Component({\n  selector: 'app-observation',\n  templateUrl: './observation.component.html',\n  styleUrls: ['./observation.component.scss'],\n})\nexport class ObservationComponent implements OnInit {\n  project;\n  projectId;\n  backUrl = 'projects';\n  buttonText = 'Back to Projects';\n  observationText = 'See Project Details';\n\n  constructor(\n    private route: ActivatedRoute,\n    private projectsService: ProjectsService,\n    private router: Router\n  ) {}\n\n  async ngOnInit() {\n    this.projectId = this.route.snapshot.paramMap.get('id');\n    this.project = await this.projectsService.getOneProject(this.projectId);\n  }\n\n  onClick() {\n    this.router.navigateByUrl('projects/' + this.projectId);\n  }\n}\n","<h2>All Observations for: {{ project?.title }}</h2>\n<div class=\"btn-group center\">\n  <app-back-button\n    [backUrl]=\"backUrl\"\n    [buttonText]=\"buttonText\"\n  ></app-back-button>\n  <button class=\"btn-round-orange\" (click)=\"onClick()\">\n    {{ observationText }}\n  </button>\n</div>\n\n<app-project-observations\n  [projectId]=\"projectId\"\n  [getByUser]=\"false\"\n></app-project-observations>\n","import { environment } from './../../../environments/environment';\nimport { UserService } from './../../services/user.service';\nimport { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { GeolocationService } from '@ng-web-apis/geolocation';\n\n@Component({\n  selector: 'app-make-observation',\n  templateUrl: './make-observation.component.html',\n  styleUrls: ['./make-observation.component.scss'],\n})\nexport class MakeObservationComponent implements OnInit {\n  public latitude;\n  public longitude;\n  user: any;\n  projectId: string;\n  buttonText = 'Return to Project';\n  backUrl = null;\n\n  constructor(\n    private usersService: UserService,\n    private fb: FormBuilder,\n    private http: HttpClient,\n    private router: Router,\n    private readonly geolocation$: GeolocationService,\n    private route: ActivatedRoute\n  ) {}\n\n  obsForm = this.fb.group({\n    username: [''],\n    title: [''],\n    date: Date,\n    observation: [''],\n    city: [''],\n    state: [''],\n    longitude: Number,\n    latitude: Number,\n  });\n\n  async ngOnInit() {\n    this.user = await this.usersService.getUserInfo();\n    this.projectId = this.route.snapshot.paramMap.get('id');\n    this.backUrl = 'projects/' + this.projectId;\n  }\n\n  getLocation() {\n    this.geolocation$.subscribe((position) => {\n      this.longitude = position.coords.longitude;\n      this.latitude = position.coords.latitude;\n    });\n  }\n\n  async onSubmit() {\n    let obsData = {\n      user: this.user._id,\n      title: this.obsForm.get('title').value,\n      text: this.obsForm.get('observation').value,\n      date: this.obsForm.get('date').value,\n      city: this.obsForm.get('city').value,\n      state: this.obsForm.get('state').value,\n      longitude: this.obsForm.get('longitude').value,\n      latitude: this.obsForm.get('latitude').value,\n      project: this.projectId,\n    };\n    try {\n      const res: any = await this.http\n        .post(environment.backendUrl + 'observation/create', obsData)\n        .toPromise();\n\n      window.alert('Thanks for making an observation!');\n      this.router.navigateByUrl('projects/' + this.projectId);\n    } catch (err) {\n      window.alert(err.message);\n    }\n    this.obsForm.reset();\n  }\n}\n","<h2>Add a New Observation</h2>\n\n<div class=\"obs_form\">\n  <form  [formGroup]=\"obsForm\" ngNativeValidate (ngSubmit)=\"onSubmit()\">\n    <div>\n      <label>\n        Title:<br />\n        <input name=\"title\" type=\"text\" formControlName=\"title\" ngModel required/>\n      </label>\n    </div>\n\n    <div>\n      <label>\n        Observation:<br />\n        <textarea name=\"obs\" formControlName=\"observation\" ngModel required></textarea></label\n      ><br />\n    </div>\n\n    <div>\n      <label>\n        City:<br />\n        <input type=\"text\" formControlName=\"city\" /> </label><br />\n    </div>\n\n    <div>\n      <label>\n        State:<br />\n        <input type=\"text\" formControlName=\"state\" /> </label><br />\n    </div>\n\n    <div>\n      <label>\n        Date:<br />\n        <input type=\"date\" formControlName=\"date\" /> </label><br />\n    </div>\n    <table>\n      <tr>\n        <td>\n          <label>\n            Longitude:<br />\n            <input [(ngModel)]=\"longitude\" value=\"{{ longitude }}\" step=\"any\" type=\"number\" formControlName=\"longitude\" />\n          </label><br />\n        </td>\n        <td>\n          <label>\n            Latitude:<br />\n            <input [(ngModel)]=\"latitude\" type=\"number\" step=\"any\" formControlName=\"latitude\" /> </label><br />\n        </td>\n        <td>\n          <button type=\"button\" class=\"btn-round-purple\" id=\"location-btn\" (click)=\"getLocation()\">\n            <img src=\"assets/imgs/map-marked-alt-solid.svg\">\n          </button>\n        </td>\n      </tr>\n\n    \n    </table>\n    <div class=\"btn-group\">\n      <app-back-button [backUrl]=\"backUrl\" [buttonText]=\"buttonText\"></app-back-button>\n  \n      <button class=\"btn-round-blue\" type=\"submit\">Submit</button><br />\n    </div>\n  </form>\n  <br />\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-project-data',\n  templateUrl: './project-data.component.html',\n  styleUrls: ['./project-data.component.scss']\n})\nexport class ProjectDataComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>project-data works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss'],\n})\nexport class NavigationComponent implements OnInit {\n  navBar = false;\n\n  constructor(private router: Router) {}\n\n  async ngOnInit(): Promise<void> {}\n\n  onLogout() {\n    const isLoggedIn = sessionStorage.getItem('isLoggedIn');\n    if (isLoggedIn) {\n      localStorage.removeItem('user');\n      localStorage.removeItem('username');\n      sessionStorage.removeItem('isLoggedIn');\n      window.alert('Successfully logged out!');\n      this.router.navigateByUrl('/login');\n    } else {\n      window.alert('Please login to continue...');\n    }\n  }\n}\n","<div>\n  <button class=\"btn-round-purple\" id=\"nav-btn-1\" routerLink=\"dashboard\">\n    <img src=\"assets/imgs/home-solid.svg\" />\n  </button>\n  <button class=\"btn-round-red\" id=\"nav-btn-2\" (click)=\"onLogout()\">\n    <img src=\"assets/imgs/sign-out-alt-solid.svg\" />\n  </button>\n\n  <button class=\"btn-round-orange\" id=\"nav-btn-3\" routerLink=\"profile\">\n    <img src=\"assets/imgs/user-solid.svg\" />\n  </button>\n</div>\n","<div class=\"list_all\">\n  <div *ngFor=\"let observation of observations\">\n    <div class=\"obs-container\">\n      <div class=\"title\">\n        <h3>{{ observation?.title }}</h3>\n      </div>\n      <div class=\"obs-details\">\n        <div class=\"obs-info\">\n          <p><b>Date:</b> {{ observation?.date | date: 'MM-dd-yyyy': 'UTC' }}</p>\n          <p><b>Observation:</b> {{ observation?.text }}</p>\n          <p>\n            <b>Location:</b> {{ observation?.city\n            }}<span *ngIf=\"observation.state\">, </span>\n            {{ observation?.state }}\n          </p>\n        </div>\n        <div class=\"obs-actions\">\n          <button *ngIf=\"getByUser\" class=\"btn-round-green\" id=\"obs_btn\" (click)=\"onEditClick(observation._id)\">\n            <img src=\"assets/imgs/edit-solid.svg\">\n          </button>\n          <button *ngIf=\"getByUser\" class=\"btn-round-red\" id=\"obs_btn\" (click)=\"onDeleteClick(observation._id)\">\n            <img src=\"assets/imgs/trash-alt-solid.svg\">\n          </button>\n        </div>\n      </div>\n    </div>\n    <br><br>\n  </div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ObservationService } from 'src/app/services/observation.service';\n\n@Component({\n  selector: 'app-project-observations',\n  templateUrl: './project-observations.component.html',\n  styleUrls: ['./project-observations.component.scss'],\n})\nexport class ProjectObservationsComponent implements OnInit {\n  @Input() projectId: any;\n  @Input() getByUser;\n  observations;\n\n  constructor(\n    private observationService: ObservationService,\n    private router: Router\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    if (!this.getByUser) {\n      this.observations = await this.observationService.getProjectObservations(\n        this.projectId\n      );\n    } else {\n      const username = localStorage.getItem('username');\n      this.observations =\n        await this.observationService.getObservationsByUserAndProject(\n          this.projectId,\n          username\n        );\n    }\n  }\n\n  onEditClick(observationId) {\n    this.router.navigateByUrl('update-observation/' + observationId);\n  }\n\n  async onDeleteClick(observationId) {\n    try {\n      await this.observationService.deleteObservation(observationId);\n      this.ngOnInit();\n    } catch (err) {\n      window.alert('Unable to delete observation.');\n    }\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-add-project',\n  templateUrl: './add-project.component.html',\n  styleUrls: ['./add-project.component.scss'],\n})\nexport class AddProjectComponent implements OnInit {\n  backUrl: string = '/admin-dashboard';\n  buttonText: string = 'Back to Dashboard';\n  constructor(\n    private fb: FormBuilder,\n    private http: HttpClient,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {}\n\n  projForm = this.fb.group({\n    title: [''],\n    type: [''],\n    description: [''],\n  });\n\n  async onSubmit() {\n    let formData = {\n      title: this.projForm.get('title').value,\n      type: this.projForm.get('type').value,\n      description: this.projForm.get('description').value,\n    };\n\n    try {\n      const res = await this.http\n        .post(environment.backendUrl + 'project/create', formData)\n        .toPromise();\n\n      this.router.navigateByUrl('projects');\n    } catch (err) {\n      window.alert(err.message);\n    }\n  }\n}\n","<h1>Add a New Project</h1>\n<div class=\"add_form\">\n  <form [formGroup]=\"projForm\" ngNativeValidate (ngSubmit)=\"onSubmit()\">\n    <div>\n      <label>\n        Project Title:<br />\n        <input type=\"text\" formControlName=\"title\" ngModel required/>\n      </label>\n    </div>\n    <div>\n      <label for=\"type\">Project type:</label>\n\n      <select name=\"type\" formControlName=\"type\" ngModel required>\n        <option value=\"wildlife\">Wildlife</option>\n        <option value=\"water\">Oceans and Streams</option>\n        <option value=\"weather\">Weather</option>\n        <option value=\"plants\">Plants</option>\n      </select>\n    </div>\n    <div>\n      <label>\n        Description:<br />\n        <textarea name=\"descr\" formControlName=\"description\" ngModel required></textarea></label\n      ><br />\n    </div>\n    <div class=\"btn-group center\">\n      <app-back-button\n        [backUrl]=\"backUrl\"\n        [buttonText]=\"buttonText\"\n      ></app-back-button>\n      <button class=\"btn-round-purple\" type=\"submit\">Submit</button>\n    </div>\n  </form>\n  <br />\n</div>\n","<h2>All Projects</h2>\n<div class=\"list_all\">\n  <div *ngFor=\"let project of sampleProjects\">\n    <div class=\"proj-container\">\n      <div class=\"title\">\n        <h3>{{ project?.title }}</h3>\n      </div>\n      <div class=\"proj-details\">\n        <div class=\"proj-info\">\n          <p><b>Type:</b> {{ project?.type }}</p>\n          <p><b>Description:</b> {{ project?.description | summary:100}}</p>\n        </div>\n        <div class=\"proj-actions\">\n          <button class=\"btn-round-green\" id=\"proj_btn\" [routerLink]=\"['/projects', project._id]\">\n            <img src=\"assets/imgs/question-circle-regular.svg\">\n          </button>\n          <button class=\"btn-round-orange\" id=\"proj_btn\" [routerLink]=\"['/projects/observations', project._id]\">\n            <img src=\"assets/imgs/binoculars-solid.svg\">\n          </button>\n        </div>\n      </div>\n    </div>\n    <br><br>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ProjectsService } from 'src/app/services/projects.service';\nimport { ActivatedRoute } from '@angular/router';\n\n\n\n\n\n@Component({\n  selector: 'app-projects',\n  templateUrl: './projects.component.html',\n  styleUrls: ['./projects.component.scss'],\n})\n\n\nexport class ProjectsComponent implements OnInit {\n  sampleProjects: any;\n  projectType: string;\n\n  constructor(\n    private route: ActivatedRoute,\n    private projectsService: ProjectsService\n  ) { }\n\n\n\n  async ngOnInit() {\n    this.route.queryParams.subscribe((params) => {\n      this.projectType = params['type'];\n    });\n    if (this.projectType) {\n      this.sampleProjects = await this.projectsService.getProjectsByType(\n        this.projectType\n      );\n    } else {\n      this.sampleProjects = await this.projectsService.getAllProjects();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ProjectsComponent } from './projects/projects.component';\nimport { ObservationComponent } from './observation/observation.component';\nimport { ProjectDescriptionComponent } from './project-description/project-description.component';\nimport { ProjectObservationsComponent } from './project-observations/project-observations.component';\nimport { RouterModule } from '@angular/router';\nimport { NavigationComponent } from './navigation/navigation.component';\nimport { BackButtonComponent } from './back-button/back.component';\nimport { SummaryPipe } from '../CustomPipe/Summary.pipe';\nimport { SingleObservationComponent } from './single-observation/single-observation.component';\n\n@NgModule({\n  declarations: [\n    ProjectsComponent,\n    ObservationComponent,\n    ProjectDescriptionComponent,\n    ProjectObservationsComponent,\n    NavigationComponent,\n    BackButtonComponent,\n    SummaryPipe,\n    SingleObservationComponent,\n  ],\n  imports: [CommonModule, RouterModule],\n  exports: [\n    ProjectsComponent,\n    NavigationComponent,\n    BackButtonComponent,\n    SingleObservationComponent,\n  ],\n})\nexport class SharedModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ObservationService } from 'src/app/services/observation.service';\nimport { Router } from '@angular/router';\nimport { Parser } from 'json2csv';\n\n@Component({\n  selector: 'app-observations-list',\n  templateUrl: './observations-list.component.html',\n  styleUrls: ['./observations-list.component.scss'],\n})\nexport class ObservationListComponent implements OnInit {\n  observations;\n  allObservations;\n\n  constructor(\n    private observationService: ObservationService,\n    private router: Router\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    this.observations = await this.observationService.getAllObservations();\n  }\n\n  onViewClick(observationID) {\n    this.router.navigateByUrl('observation/' + observationID);\n  }\n\n  onEditClick(observationId) {\n    this.router.navigateByUrl('update-observation/' + observationId);\n  }\n\n  async onDeleteClick(observationId) {\n    try {\n      await this.observationService.deleteObservation(observationId);\n      this.ngOnInit();\n    } catch (err) {\n      window.alert('Unable to delete observation.');\n    }\n  }\n\n  async downloadObservations() {\n    this.allObservations = await this.observationService.getAllObservations();\n    for (let observation of this.allObservations) {\n      observation.user = observation.user.username;\n      observation.project = observation.project.title;\n    }\n    const json2csvParser = new Parser();\n    const csv = json2csvParser.parse(this.allObservations);\n\n    // from https://www.javatpoint.com/javascript-create-and-download-csv-file\n\n    var hiddenElement = document.createElement('a');\n    hiddenElement.href = 'data:text/csv;charset=utf-8,' + encodeURI(csv);\n    hiddenElement.target = '_blank';\n    hiddenElement.download = 'All_Observations.csv';\n    hiddenElement.click();\n  }\n}\n","<h2>Observations Master List</h2>\n<div class=\"download-container\">\n  <button class=\"btn-round-orange\" (click)=\"downloadObservations()\">\n    Download All\n  </button>\n</div>\n<table>\n  <tr>\n    <th>Project</th>\n    <th>User</th>\n    <th>Date</th>\n    <th>Actions</th>\n  </tr>\n  <tr *ngFor=\"let observation of observations\">\n    <td>{{ observation?.project?.title }}</td>\n    <td>{{ observation?.user?.username }}</td>\n    <td>{{ observation?.date }}</td>\n    <td>\n      <button class=\"btn-round-green\" (click)=\"onViewClick(observation._id)\">\n        View\n      </button>\n      <button class=\"btn-round-purple\" (click)=\"onEditClick(observation._id)\">\n        Edit\n      </button>\n      <button class=\"btn-round-red\" (click)=\"onDeleteClick(observation._id)\">\n        Delete\n      </button>\n    </td>\n  </tr>\n</table>\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  async ngOnInit() {\n\n  }\n}\n","<div class=\"content\">\n  <div class=\"header\">\n    <h1>Citizen Science App</h1>\n    <app-navigation></app-navigation>\n  </div>\n  <div class=\"app_content\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n","import { environment } from './../../../environments/environment';\nimport { UserService } from './../../services/user.service';\nimport { ObservationService } from './../../services/observation.service';\nimport { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { GeolocationService } from '@ng-web-apis/geolocation';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-update-observation',\n  templateUrl: './update-observation.component.html',\n  styleUrls: ['./update-observation.component.scss'],\n})\nexport class UpdateObservationComponent implements OnInit {\n  public latitude;\n  public longitude;\n  public date;\n\n  user: any;\n\n  public observation;\n  public observationID;\n\n  buttonText = 'Return to Project';\n  backUrl = null;\n\n  constructor(\n    private usersService: UserService,\n    private datepipe: DatePipe,\n    private fb: FormBuilder,\n    private datePipe: DatePipe,\n    private http: HttpClient,\n    private router: Router,\n    private observationService: ObservationService,\n    private route: ActivatedRoute,\n    private readonly geolocation$: GeolocationService\n  ) {}\n\n  obsForm = this.fb.group({\n    username: [''],\n    title: [''],\n    date: Date,\n    observation: [''],\n    city: [''],\n    state: [''],\n    longitude: Number,\n    latitude: Number,\n  });\n\n  async ngOnInit() {\n    this.observationID = this.route.snapshot.paramMap.get('id');\n    this.observation = await this.observationService.getOneObservation(\n      this.observationID\n    );\n\n    this.user = await this.usersService.getUserInfo();\n\n    this.date = this.datepipe.transform(this.observation.date, 'yyyy-MM-dd','UTC');\n    this.longitude = this.observation.longitude;\n    this.latitude = this.observation.latitude;\n    this.backUrl = 'projects/' + this.observation.project;\n  }\n\n  getLocation() {\n    this.geolocation$.subscribe((position) => {\n      this.longitude = position.coords.longitude;\n      this.latitude = position.coords.latitude;\n    });\n  }\n\n  async onSubmit() {\n    let obsData = {\n      user: this.user.id,\n      title: this.obsForm.get('title').value,\n      text: this.obsForm.get('observation').value,\n      date: this.obsForm.get('date').value,\n      city: this.obsForm.get('city').value,\n      state: this.obsForm.get('state').value,\n      longitude: this.obsForm.get('longitude').value,\n      latitude: this.obsForm.get('latitude').value,\n    };\n    try {\n      const res: any = await this.http\n        .put(\n          environment.backendUrl + 'observation/' + this.observationID,\n          obsData\n        )\n        .toPromise();\n      window.alert('Observation updated!');\n      this.router.navigateByUrl(this.backUrl);\n    } catch (err) {\n      window.alert(err.message);\n    }\n    this.obsForm.reset();\n  }\n}\n","<h1>Update Observation</h1>\n\n<div class=\"obs_form\">\n  <form [formGroup]=\"obsForm\" (ngSubmit)=\"onSubmit()\">\n    <div>\n      <label>\n        Title:<br />\n        <input [(ngModel)]=\"this.observation.title\" value=\"{{ this.observation.title }}\" type=\"text\"\n          formControlName=\"title\" />\n      </label>\n    </div>\n\n    <div>\n      <label>\n        Observation:<br />\n        <textarea [(ngModel)]=\"this.observation.text\" value=\"{{ this.observation.text }}\" name=\"obs\"\n          formControlName=\"observation\"></textarea></label><br />\n    </div>\n\n    <div>\n      <label>\n        City:<br />\n        <input [(ngModel)]=\"this.observation.city\" value=\"{{ this.observation.city }}\" type=\"text\"\n          formControlName=\"city\" /> </label><br />\n    </div>\n\n    <div>\n      <label>\n        State:<br />\n        <input [(ngModel)]=\"this.observation.state\" value=\"{{ this.observation.state }}\" type=\"text\"\n          formControlName=\"state\" /> </label><br />\n    </div>\n\n    <div>\n      <label>\n        Date:<br />\n        <input \n            [(ngModel)]=\"this.date\" \n            value=\"{{ this.date | date: 'yyyy-MM-dd':'+UTC' }}\" \n            type=\"date\"\n            formControlName=\"date\" /> </label><br />\n        >\n    </div>\n    <table>\n      <tr>\n        <td>\n          <label>\n            Longitude:<br />\n            <input [(ngModel)]=\"longitude\" value=\"{{ longitude }}\" type=\"number\" formControlName=\"longitude\" />\n          </label><br />\n        </td>\n        <td>\n          <label>\n            Latitude:<br />\n            <input [(ngModel)]=\"latitude\" type=\"number\" formControlName=\"latitude\" /> </label><br />\n        </td>\n        <td>\n          <button type=\"button\" class=\"btn-round-purple\" id=\"location-btn\" (click)=\"getLocation()\">\n            <img src=\"assets/imgs/map-marked-alt-solid.svg\">\n          </button>\n        </td>\n      </tr>\n\n    </table>\n\n    <div class=\"btn-group\">\n      <app-back-button [backUrl]=\"backUrl\" [buttonText]=\"buttonText\"></app-back-button>\n      <button class=\" btn-round-blue\" id=\"form-sub\" type=\"submit\">Submit</button>\n    </div>\n  </form>\n  <br />\n</div>","import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n  Router,\n  CanActivate,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { UserService } from '../services/user.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AdminGuard implements CanActivate {\n  constructor(private router: Router, private userService: UserService) {}\n\n  async canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Promise<boolean> {\n    const isAdmin = await this.userService.getIsAdmin();\n    if (isAdmin) {\n      return true;\n    }\n    this.router.navigateByUrl('dashboard');\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n  CanActivateChild,\n  Router,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivateChild {\n  constructor(private router: Router) {}\n\n  canActivateChild(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    const isLoggedIn = sessionStorage.getItem('isLoggedIn');\n    if (isLoggedIn) {\n      return true;\n    }\n    this.router.navigateByUrl('login');\n    window.alert('Please login to continue...');\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n  Router,\n  CanActivate,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { UserService } from '../services/user.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DashboardGuard implements CanActivate {\n  constructor(private router: Router, private userService: UserService) {}\n\n  async canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Promise<boolean> {\n    const isAdmin = await this.userService.getIsAdmin();\n    if (isAdmin) {\n      this.router.navigateByUrl('admin-dashboard');\n      return false;\n    }\n    return true;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.scss'],\n})\nexport class RegistrationComponent implements OnInit {\n  message: string;\n\n  constructor(\n    private fb: FormBuilder,\n    private http: HttpClient,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.message = '';\n  }\n\n  userForm = this.fb.group({\n    first_name: [''],\n    last_name: [''],\n    age: [''],\n    username: [''],\n    email: [''],\n    password: [''],\n  });\n\n  async onSubmit() {\n    let formData = {\n      first_name: this.userForm.get('first_name').value,\n      last_name: this.userForm.get('last_name').value,\n      age: this.userForm.get('age').value,\n      username: this.userForm.get('username').value,\n      email: this.userForm.get('email').value,\n      password: this.userForm.get('password').value,\n      admin: false,\n    };\n\n    try {\n      const res = await this.http\n        .post(environment.backendUrl + 'auth/register', formData)\n        .toPromise();\n\n      this.router.navigateByUrl('login?created=success');\n    } catch (err) {\n      this.message = err.error.error || err.error.message;\n    }\n  }\n}\n","<h1>Sign Up</h1>\n<div id=\"message\">\n  <h3>{{ message }}</h3>\n</div>\n<div class=\"add_form\">\n  <form [formGroup]=\"userForm\" ngNativeValidate (ngSubmit)=\"onSubmit()\">\n    <div>\n      <label>\n        First Name:<br />\n        <input type=\"text\" formControlName=\"first_name\" ngModel required />\n      </label>\n    </div>\n    <div>\n      <label>\n        Last Name:<br />\n        <input type=\"text\" formControlName=\"last_name\" ngModel required />\n      </label>\n    </div>\n    <div>\n      <label>\n        age:<br />\n        <input type=\"number\" formControlName=\"age\" />\n      </label>\n    </div>\n    <div>\n      <label>\n        username:<br />\n        <input type=\"text\" formControlName=\"username\" ngModel required />\n      </label>\n    </div>\n    <div>\n      <label>\n        email:<br />\n        <input\n          type=\"email\"\n          formControlName=\"email\"\n          ngModel email\n          ngModel required\n        />\n      </label>\n    </div>\n    <div>\n      <label>\n        password:<br />\n        <input\n          type=\"text\"\n          formControlName=\"password\"\n          ngModel required\n          minlength=\"8\"\n          maxLength=\"16\"\n        />\n      </label>\n    </div>\n    <button class=\"btn-round-red\" type=\"submit\">Submit</button>\n  </form>\n  <br />\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { SharedModule } from './shared/shared.module';\nimport { DatePipe } from '@angular/common';\nimport { UserModule } from './user/user.module';\nimport { AccountModule } from './account/account.module';\nimport { AdminModule } from './admin/admin.module';\nimport { JwtInterceptorProvider } from './interceptors/jwt.interceptor';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    AppRoutingModule,\n    BrowserModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    SharedModule,\n    UserModule,\n    AccountModule,\n    AdminModule,\n  ],\n  providers: [DatePipe, JwtInterceptorProvider],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ActivatedRoute } from '@angular/router';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  constructor(\n    private fb: FormBuilder,\n    private http: HttpClient,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {}\n  message: string = null;\n  created: string;\n\n  loginForm = this.fb.group({\n    username: [''],\n    password: [''],\n  });\n\n  ngOnInit() {\n    this.route.queryParams.subscribe((params) => {\n      this.created = params['created'];\n    });\n    if (this.created == 'success') {\n      this.message = 'Account created successfully. Please log in below!';\n    }\n\n    const isLoggedIn = sessionStorage.getItem('isLoggedIn');\n    if (isLoggedIn) {\n      this.router.navigateByUrl('dashboard');\n    }\n  }\n\n  async onSubmit() {\n    let formData = {\n      username: this.loginForm.get('username').value,\n      password: this.loginForm.get('password').value,\n    };\n\n    try {\n      const res: any = await this.http\n        .post(environment.backendUrl + 'auth/login', formData)\n        .toPromise();\n      localStorage.setItem('token', res.accessToken);\n      localStorage.setItem('username', res.username);\n      sessionStorage.setItem('isLoggedIn', 'true');\n      this.router.navigateByUrl('dashboard');\n    } catch (err) {\n      this.message = 'Incorrect username or password. Please try again...';\n    }\n  }\n}\n","<div id=\"message\">\n  <h3>{{ message }}</h3>\n</div>\n<div class=\"login_form\">\n  <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n    <div>\n      <label>\n        Username:<br />\n        <input type=\"text\" formControlName=\"username\" />\n      </label>\n    </div>\n    <div>\n      <label>\n        Password:<br />\n        <input type=\"password\" formControlName=\"password\" /> </label\n      ><br />\n    </div>\n    <button type=\"submit\" class=\"btn-round-blue\" [disabled]=\"!loginForm.valid\">\n      Submit\n    </button>\n  </form>\n  <div>\n    <br /><br /><br />\n    <a routerLink=\"/registration\"\n      ><button class=\"btn-round-red\">No Account? Sign Up!</button></a\n    >\n  </div>\n  <br />\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ProjectsService } from 'src/app/services/projects.service';\n\n@Component({\n  selector: 'app-project-description',\n  templateUrl: './project-description.component.html',\n  styleUrls: ['./project-description.component.scss'],\n})\nexport class ProjectDescriptionComponent implements OnInit {\n  projectId;\n  project;\n  backUrl = 'projects';\n  buttonText = 'Back to Projects';\n\n  constructor(\n    private route: ActivatedRoute,\n    private projectsService: ProjectsService,\n    private router: Router\n  ) {}\n\n  async ngOnInit() {\n    this.projectId = this.route.snapshot.paramMap.get('id');\n    this.project = await this.projectsService.getOneProject(this.projectId);\n  }\n\n  onMakeObservationClick(projectId) {\n    this.router.navigateByUrl('make-observation/' + projectId);\n  }\n\n  onViewObservationsClick(projectId) {\n    this.router.navigateByUrl('projects/observations/' + projectId);\n  }\n}\n","<h2>{{ project?.title }}</h2>\n<div>\n  <p class=\"description\">{{ project?.description }}</p>\n  <div class=\"center\">\n    <app-back-button [backUrl]=\"backUrl\" [buttonText]=\"buttonText\"></app-back-button>\n    <button class=\"btn-round-purple\" (click)=\"onMakeObservationClick(project._id)\">\n      Make An Observation\n    </button>\n    <button class=\"btn-round-orange\" (click)=\"onViewObservationsClick(project._id)\">\n      View All Observations\n    </button>\n  </div>\n</div>\n\n<div>\n  <h3>My Past Observations for {{ project?.title }}</h3>\n</div>\n<app-project-observations [projectId]=\"projectId\" [getByUser]=\"true\"></app-project-observations>","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-user-dashboard',\n  templateUrl: './user-dashboard.component.html',\n  styleUrls: ['./user-dashboard.component.scss']\n})\nexport class UserDashboardComponent implements OnInit {\n  user: any;\n\n  constructor(private usersService: UserService) { }\n\n  async ngOnInit() {\n    this.user = await this.usersService.getUserInfo();\n  }\n\n}\n","<h1>Welcome Back, {{ user?.first_name }}!</h1>\n<h2>Choose a Project</h2>\n<table class=\"types_table\">\n  <tr>\n    <td>\n      <a [routerLink]=\"['/projects']\" [queryParams]=\"{ type: 'plants' }\"><button class=\"proj_type\" id=\"plants\">\n          <img src=\"assets/imgs/leaf-solid.svg\" /><br />\n          plants and nature\n        </button></a>\n    </td>\n    <td>\n      <a [routerLink]=\"['/projects']\" [queryParams]=\"{ type: 'wildlife' }\"><button class=\"proj_type\" id=\"animals\">\n          <img src=\"assets/imgs/paw-solid.svg\" /><br />\n          wildlife\n        </button></a>\n    </td>\n  </tr>\n  <tr>\n    <td>\n      <a [routerLink]=\"['/projects']\" [queryParams]=\"{ type: 'weather' }\"><button class=\"proj_type\" id=\"weather\">\n          <img src=\"assets/imgs/cloud-sun-solid.svg\" /><br />\n          weather\n        </button></a>\n    </td>\n    <td>\n      <a [routerLink]=\"['/projects']\" [queryParams]=\"{ type: 'water' }\"><button class=\"proj_type\" id=\"water\">\n          <img src=\"assets/imgs/water-solid.svg\" /><br />\n          oceans and streams\n        </button></a>\n    </td>\n  </tr>\n</table>\n\n<a routerLink=\"/observations\"><button class=\"btn-round-blue\">My Logs</button></a>","import {\n  HttpInterceptor,\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HTTP_INTERCEPTORS,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n  constructor() {}\n\n  intercept(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    const isLoggedIn = sessionStorage.getItem('isLoggedIn');\n    const token = localStorage.getItem('token');\n    if (isLoggedIn && token) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n    }\n    return next.handle(request);\n  }\n}\n\nexport const JwtInterceptorProvider = {\n  provide: HTTP_INTERCEPTORS,\n  useClass: JwtInterceptor,\n  multi: true,\n};\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss'],\n})\nexport class ProfileComponent implements OnInit {\n  user: any;\n  constructor(private userService: UserService, private router: Router) {}\n\n  async ngOnInit() {\n    this.user = await this.userService.getUserInfo();\n  }\n\n  onEditClick() {\n    this.router.navigateByUrl('edit-profile/' + this.user._id);\n  }\n}\n","<div class=\"main-content\">\n  <h1>{{ user.first_name }}'s Profile</h1>\n  <div class=\"user-info\">\n    <div>\n      <h3>Name:</h3>\n      <p>{{ user.first_name }} {{ user.last_name }}</p>\n    </div>\n    <div>\n      <h3>username:</h3>\n      <p>{{ user.username }}</p>\n    </div>\n    <div>\n      <h3>Age:</h3>\n      <p>{{ user.age }}</p>\n    </div>\n    <div>\n      <h3>Email:</h3>\n      <p>{{ user.email }}</p>\n    </div>\n  </div>\n  <div class=\"button-group\">\n    <button class=\"btn-round-blue\" type=\"submit\" (click)=\"onEditClick()\">\n      Edit Profile\n    </button>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { LoginComponent } from './login/login.component';\nimport { RouterModule } from '@angular/router';\nimport { EditRegistrationComponent } from './edit-registration/edit-registration.component';\n\n@NgModule({\n  declarations: [RegistrationComponent, LoginComponent, EditRegistrationComponent],\n  imports: [CommonModule, ReactiveFormsModule, RouterModule],\n  exports: [],\n})\nexport class AccountModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from '../shared/shared.module';\nimport { AdminDashboardComponent } from './admin-dashboard/admin-dashboard.component';\nimport { AddProjectComponent } from './add-project/add-project.component';\nimport { ProjectDataComponent } from './project-data/project-data.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { ObservationListComponent } from './observations-list/observations-list.component';\n\n@NgModule({\n  declarations: [\n    AdminDashboardComponent,\n    AddProjectComponent,\n    ProjectDataComponent,\n    ObservationListComponent,\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    ReactiveFormsModule,\n    RouterModule,\n    SharedModule,\n  ],\n})\nexport class AdminModule {}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  constructor(private http: HttpClient) {}\n\n  async getUserInfo() {\n    const username = localStorage.getItem('username');\n    return await this.http\n      .get(environment.backendUrl + 'users/' + username)\n      .toPromise();\n  }\n\n  async getIsAdmin() {\n    const user: any = await this.getUserInfo();\n    if (user.admin) {\n      return true;\n    }\n    return false;\n  }\n}\n","import { UpdateObservationComponent } from './user/update-observation/update-observation.component';\nimport { MakeObservationComponent } from './user/make-observation/make-observation.component';\nimport { UserObservationsComponent } from './user/user-observations/user-observations.component';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './account/login/login.component';\nimport { ProjectsComponent } from './shared/projects/projects.component';\nimport { UserDashboardComponent } from './user/user-dashboard/user-dashboard.component';\nimport { AdminDashboardComponent } from './admin/admin-dashboard/admin-dashboard.component';\nimport { AddProjectComponent } from './admin/add-project/add-project.component';\nimport { ProjectDescriptionComponent } from './shared/project-description/project-description.component';\nimport { ObservationComponent } from './shared/observation/observation.component';\nimport { ProjectObservationsComponent } from './shared/project-observations/project-observations.component';\nimport { AuthGuard } from './guards/auth.guard';\nimport { RegistrationComponent } from './account/registration/registration.component';\nimport { DashboardGuard } from './guards/dashboard.guard';\nimport { AdminGuard } from './guards/admin.guard';\nimport { ProfileComponent } from './account/profile/profile.component';\nimport { EditRegistrationComponent } from './account/edit-registration/edit-registration.component';\nimport { ObservationListComponent } from './admin/observations-list/observations-list.component';\nimport { SingleObservationComponent } from './shared/single-observation/single-observation.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'login', pathMatch: 'full' },\n  { path: 'login', component: LoginComponent },\n  { path: 'registration', component: RegistrationComponent },\n\n  {\n    path: '',\n    canActivateChild: [AuthGuard],\n    children: [\n      { path: 'edit-profile/:id', component: EditRegistrationComponent },\n      { path: 'projects', component: ProjectsComponent },\n      { path: 'projects/:id', component: ProjectDescriptionComponent },\n      { path: 'profile', component: ProfileComponent },\n      {\n        path: 'projects/observations',\n        component: ProjectObservationsComponent,\n      },\n      { path: 'projects/observations/:id', component: ObservationComponent },\n      {\n        path: 'dashboard',\n        component: UserDashboardComponent,\n        canActivate: [DashboardGuard],\n      },\n      { path: 'observations', component: UserObservationsComponent },\n      {\n        path: 'admin-dashboard',\n        component: AdminDashboardComponent,\n        canActivate: [AdminGuard],\n      },\n      { path: 'add-project', component: AddProjectComponent },\n      { path: 'make-observation/:id', component: MakeObservationComponent },\n      { path: 'update-observation/:id', component: UpdateObservationComponent },\n      { path: 'admin-observations', component: ObservationListComponent },\n      {path: 'observation/:id', component: SingleObservationComponent}\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}